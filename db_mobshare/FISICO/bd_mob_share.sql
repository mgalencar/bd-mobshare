-- MySQL Script generated by MySQL Workbench
-- Sun Mar 31 17:14:44 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mob_share
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mob_share
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mob_share` DEFAULT CHARACTER SET utf8 ;
USE `mob_share` ;

-- -----------------------------------------------------
-- Table `mob_share`.`tbl_cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_cliente` (
  `id_cliente` INT NOT NULL AUTO_INCREMENT COMMENT 'código do cliente',
  `nome_cliente` VARCHAR(250) NOT NULL COMMENT 'nome do cliente',
  `cpf` VARCHAR(11) NOT NULL COMMENT 'cpf do cliente',
  `telefone` VARCHAR(15) NULL COMMENT 'telefone do cliente',
  `celular` VARCHAR(16) NOT NULL COMMENT 'celular do cliente',
  `cnh_foto` VARCHAR(255) NOT NULL COMMENT 'foto da cnh do cliente',
  `foto_cliente` VARCHAR(255) NOT NULL COMMENT 'foto do cliente',
  `rua` VARCHAR(150) NOT NULL COMMENT 'rua do endereço do cliente',
  `bairro` VARCHAR(150) NOT NULL COMMENT 'bairro do cliente',
  `cep` VARCHAR(8) NOT NULL COMMENT 'cep do cliente',
  `complemento` VARCHAR(150) NOT NULL COMMENT 'complemento do endereço do cliente',
  `cidade` VARCHAR(70) NOT NULL COMMENT 'cidade do cliente',
  `uf` VARCHAR(2) NOT NULL COMMENT 'sigla do estado do cliente ',
  `email` VARCHAR(150) NOT NULL,
  `senha` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_cliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_tipo_veiculo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_tipo_veiculo` (
  `id_tipo_veiculo` INT NOT NULL COMMENT 'código da tabela tipo de veículo',
  `nome_tipo_veiculo` VARCHAR(20) NOT NULL COMMENT 'nome do tipo de veículo',
  PRIMARY KEY (`id_tipo_veiculo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_marca_veiculo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_marca_veiculo` (
  `id_marca_veiculo` INT NOT NULL AUTO_INCREMENT COMMENT 'código da marca do veículo',
  `nome_marca` VARCHAR(20) NOT NULL COMMENT 'nome da marca do veículo',
  PRIMARY KEY (`id_marca_veiculo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_marca_veiculo_tipo_veiculo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_marca_veiculo_tipo_veiculo` (
  `id_tipo_marca` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela tipo da marca do veículo',
  `id_tipo_veiculo` INT NOT NULL COMMENT 'código da tabela tipo do veículo',
  `id_marca_veiculo` INT NOT NULL COMMENT 'código da tabelma marca do veículo',
  PRIMARY KEY (`id_tipo_marca`),
  INDEX `fk_tbl_marca_veiculo_tipo_veiculo_tbl_marca_veiculo_idx` (`id_marca_veiculo` ASC) VISIBLE,
  INDEX `fk_tbl_marca_veiculo_tipo_veiculo_tbl_tipo_veiculo_idx` (`id_tipo_veiculo` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_marca_veiculo_tipo_veiculo_tbl_marca_veiculo`
    FOREIGN KEY (`id_marca_veiculo`)
    REFERENCES `mob_share`.`tbl_marca_veiculo` (`id_marca_veiculo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_marca_veiculo_tipo_veiculo_tbl_tipo_veiculo`
    FOREIGN KEY (`id_tipo_veiculo`)
    REFERENCES `mob_share`.`tbl_tipo_veiculo` (`id_tipo_veiculo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_modelo_veiculo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_modelo_veiculo` (
  `id_modelo` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela do modelo do veículo',
  `nome_modelo` VARCHAR(50) NOT NULL COMMENT 'nome do modelo',
  `id_marca_tipo` INT NOT NULL COMMENT 'código da tabela marca tipo do veículo',
  PRIMARY KEY (`id_modelo`),
  INDEX `fk_tbl_modelo_veiculo_tbl_marca_veiculo_tipo_veiculo_idx` (`id_marca_tipo` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_modelo_veiculo_tbl_marca_veiculo_tipo_veiculo`
    FOREIGN KEY (`id_marca_tipo`)
    REFERENCES `mob_share`.`tbl_marca_veiculo_tipo_veiculo` (`id_tipo_marca`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_veiculo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_veiculo` (
  `id_veiculo` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela de veículo',
  `ano` VARCHAR(45) NOT NULL,
  `placa` VARCHAR(45) NOT NULL,
  `quilometragem` VARCHAR(45) NOT NULL,
  `renavam` VARCHAR(45) NOT NULL COMMENT 'renavam do veículo',
  `id_tipo_veiculo` INT NOT NULL COMMENT 'código da tabela tipo de veículo',
  `id_marca_veiculo` INT NOT NULL COMMENT 'código da tabela marca do veículo',
  `id_modelo_veiculo` INT NOT NULL COMMENT 'código da tabela modelo do veículo',
  `id_cliente` INT NOT NULL COMMENT 'código da tabela cliente',
  PRIMARY KEY (`id_veiculo`),
  INDEX `fk_tbl_veiculo_tbl_tipo_veiculo_idx` (`id_tipo_veiculo` ASC) VISIBLE,
  INDEX `fk_tbl_tbl_veiculo_tbl_marca_veiculo_idx` (`id_marca_veiculo` ASC) VISIBLE,
  INDEX `fk_tbl_veiculo_tbl_modelo_veiculo_idx` (`id_modelo_veiculo` ASC) VISIBLE,
  INDEX `fk_tbl_veiculo_tbl_cliente_idx` (`id_cliente` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_veiculo_tbl_tipo_veiculo`
    FOREIGN KEY (`id_tipo_veiculo`)
    REFERENCES `mob_share`.`tbl_tipo_veiculo` (`id_tipo_veiculo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_tbl_veiculo_tbl_marca_veiculo`
    FOREIGN KEY (`id_marca_veiculo`)
    REFERENCES `mob_share`.`tbl_marca_veiculo` (`id_marca_veiculo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_veiculo_tbl_modelo_veiculo`
    FOREIGN KEY (`id_modelo_veiculo`)
    REFERENCES `mob_share`.`tbl_modelo_veiculo` (`id_modelo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_veiculo_tbl_cliente`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `mob_share`.`tbl_cliente` (`id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = '	';


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_anuncio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_anuncio` (
  `id_anuncio` INT NOT NULL COMMENT 'código da tabela anúncio',
  `descricao` TEXT NOT NULL COMMENT 'descrição da tabela de anúncio',
  `id_cliente_locador` INT NOT NULL COMMENT 'código da tabela cliente locador',
  `id_veiculo` INT NOT NULL COMMENT 'código da tabela de veículo',
  `horario_inicio` TIME NOT NULL COMMENT 'horário de inicio do anúncio',
  `horario_termino` TIME NOT NULL COMMENT 'horário de termino do anúncio',
  `data_inicial` DATE NOT NULL COMMENT 'data inicial do anúncio',
  `data_final` DATE NOT NULL COMMENT 'data final do anúncio',
  `status_aprovado` TINYINT NOT NULL COMMENT 'status aprovado do anúncio',
  PRIMARY KEY (`id_anuncio`),
  INDEX `fk_tbl_usuario_tbl_anuncios_idx` (`id_cliente_locador` ASC) VISIBLE,
  INDEX `fk_tbl_veiculos_tbl_anuncios_idx` (`id_veiculo` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_usuario_tbl_anuncios`
    FOREIGN KEY (`id_cliente_locador`)
    REFERENCES `mob_share`.`tbl_cliente` (`id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_veiculos_tbl_anuncios`
    FOREIGN KEY (`id_veiculo`)
    REFERENCES `mob_share`.`tbl_veiculo` (`id_veiculo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_locacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_locacao` (
  `id_locacao` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela locação',
  `id_cliente_locador` INT NOT NULL COMMENT 'código da tabela cliente locador',
  `id_anuncio` INT NOT NULL COMMENT 'código da tabela anúncio',
  `valor_locacao` FLOAT NOT NULL COMMENT 'valor da locação',
  `data_hora_final` DATETIME NOT NULL COMMENT 'data e hora final da locação',
  `id_percentual` INT NOT NULL COMMENT 'código da tabela percentual',
  PRIMARY KEY (`id_locacao`),
  INDEX `fk_tbl_usuario_tbl_locacao_idx` (`id_cliente_locador` ASC) VISIBLE,
  INDEX `fk_tbl_anuncio_tbl_locacao_idx` (`id_anuncio` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_usuario_tbl_locacao`
    FOREIGN KEY (`id_cliente_locador`)
    REFERENCES `mob_share`.`tbl_cliente` (`id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_anuncio_tbl_locacao`
    FOREIGN KEY (`id_anuncio`)
    REFERENCES `mob_share`.`tbl_anuncio` (`id_anuncio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_anuncio_venda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_anuncio_venda` (
  `id_anuncio_venda` INT NOT NULL COMMENT 'código do anúncio de venda',
  `id_veiculo` INT NOT NULL COMMENT 'código da tabela do veículo',
  `id_cliente` INT NOT NULL COMMENT 'código da tabela do cliente',
  `descricao_anuncio_venda` TEXT NOT NULL COMMENT 'descrição do anúncio de venda',
  `valor_venda` FLOAT NOT NULL COMMENT 'valor de venda do anúncio',
  PRIMARY KEY (`id_anuncio_venda`),
  INDEX `fk_tbl_usuario_tbl_anuncio_venda_idx` (`id_cliente` ASC) VISIBLE,
  INDEX `fk_tbl_veiculo_tbl_anuncio_venda_idx` (`id_veiculo` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_usuario_tbl_anuncio_venda`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `mob_share`.`tbl_cliente` (`id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_veiculo_tbl_anuncio_venda`
    FOREIGN KEY (`id_veiculo`)
    REFERENCES `mob_share`.`tbl_veiculo` (`id_veiculo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_acessorios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_acessorios` (
  `id_acessorios` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela acessórios',
  `nome_acessorios` VARCHAR(150) NOT NULL COMMENT 'nome dos acessórios',
  `id_tipo_veiculo` INT NOT NULL COMMENT 'código da tabela tipo de veículo',
  PRIMARY KEY (`id_acessorios`),
  INDEX `fk_tbl_acessorios_tbl_tipo_veiculos_idx` (`id_tipo_veiculo` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_acessorios_tbl_tipo_veiculos`
    FOREIGN KEY (`id_tipo_veiculo`)
    REFERENCES `mob_share`.`tbl_tipo_veiculo` (`id_tipo_veiculo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_niveis`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_niveis` (
  `id_niveis` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela níveis',
  `nome_nivel` VARCHAR(25) NOT NULL COMMENT 'nome do nível',
  `descricao` VARCHAR(50) NOT NULL COMMENT 'descrição do nível',
  PRIMARY KEY (`id_niveis`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_usuario_cms`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_usuario_cms` (
  `id_usuario_cms` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela usuário do  cms',
  `nome_usuario_cms` VARCHAR(20) NOT NULL COMMENT 'nome de usuário do cms',
  `email_usuario_cms` VARCHAR(150) NOT NULL COMMENT 'email do usuário do cms',
  `senha` VARCHAR(20) NOT NULL COMMENT 'senha do usuário do cms',
  `id_niveis` INT NOT NULL COMMENT 'código da tabela nível',
  PRIMARY KEY (`id_usuario_cms`),
  INDEX `fk_tbl_usuario_cms_tbl_niveis_idx` (`id_niveis` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_usuario_cms_tbl_niveis`
    FOREIGN KEY (`id_niveis`)
    REFERENCES `mob_share`.`tbl_niveis` (`id_niveis`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_setor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_setor` (
  `id_setor` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela de setor',
  `nome` VARCHAR(100) NOT NULL COMMENT 'nome do setor',
  PRIMARY KEY (`id_setor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_funcionario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_funcionario` (
  `id_funcionario` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela de funcionário',
  `nome` VARCHAR(100) NOT NULL COMMENT 'nome do funcionário',
  `cpf` INT(11) NOT NULL COMMENT 'cpf do funcionário',
  `cod_funcionario` VARCHAR(32) NOT NULL COMMENT 'código de verificação do funcionário',
  `email` VARCHAR(150) NOT NULL COMMENT 'email do funcionário',
  `demissao` DATE NULL COMMENT 'data de demissão do funcionário',
  `rg` INT(9) NULL COMMENT 'rg do funcionário',
  `dt_nacimento` DATE NULL COMMENT 'data de nascimento do funcionário',
  `cep` INT(8) NULL COMMENT 'cep do endereço do funcionário',
  `uf` VARCHAR(2) NULL COMMENT 'estado do funcionário',
  `cidade` VARCHAR(100) NULL COMMENT 'cidade do funcionário',
  `logradouro` VARCHAR(100) NULL COMMENT 'logradouro do endereço do funcionário',
  `n` VARCHAR(10) NULL,
  `telefone` VARCHAR(12) NULL COMMENT 'telefone do funcionário',
  `admissao` DATE NULL COMMENT 'data de admissão do funcionário',
  `id_setor` INT NOT NULL COMMENT 'código da tabela de setor',
  PRIMARY KEY (`id_funcionario`),
  INDEX `fk_tbl_setor_tbl_funcionario_idx` (`id_setor` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_setor_tbl_funcionario`
    FOREIGN KEY (`id_setor`)
    REFERENCES `mob_share`.`tbl_setor` (`id_setor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_usuario_desktop`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_usuario_desktop` (
  `id_usuario_desktop` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela usuário desktop',
  `nome` VARCHAR(100) NOT NULL COMMENT 'nome do usuário do desktop',
  `email` VARCHAR(128) NOT NULL COMMENT 'email do usuário do desktop',
  `senha` VARCHAR(128) NULL COMMENT 'senha do usuário do desktop',
  `telefone` VARCHAR(12) NULL COMMENT 'telefone do usuário',
  `cpf` INT(11) NULL DEFAULT 00000000000 COMMENT 'cpf do usuário',
  `logado` DATETIME NULL COMMENT 'data quando usuário logou',
  `foto` VARCHAR(100) NULL COMMENT 'foto do usuário',
  `excluido` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'dado se o usuário foi excluído ou não',
  PRIMARY KEY (`id_usuario_desktop`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_folha_pagamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_folha_pagamento` (
  `id_folha_pagamento` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela folha de pagamento',
  `valor_final` DECIMAL(10,2) NOT NULL DEFAULT 0 COMMENT 'valor final da folha de pagamento',
  `data_agendamento` DATE NOT NULL COMMENT 'data de agendamento ',
  `descricao_pagamento` TEXT NOT NULL COMMENT 'descrição do pagamento',
  `cod_pagamento_funcionario` VARCHAR(32) NOT NULL COMMENT 'código do pagamento do funcionário',
  `id_funcionario` INT NOT NULL COMMENT 'código da tabela funcionário',
  `id_usuario_desktop` INT NOT NULL COMMENT 'código da tabela usuário do desktop',
  PRIMARY KEY (`id_folha_pagamento`, `id_funcionario`),
  INDEX `fk_tbl_pagamento_funcionario_tbl_funcionario_idx` (`id_funcionario` ASC) VISIBLE,
  INDEX `fk_tbl_usuario_desktop_tbl_folha_pagamento_idx` (`id_usuario_desktop` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_pagamento_funcionario_tbl_funcionario`
    FOREIGN KEY (`id_funcionario`)
    REFERENCES `mob_share`.`tbl_funcionario` (`id_funcionario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_usuario_desktop_tbl_folha_pagamento`
    FOREIGN KEY (`id_usuario_desktop`)
    REFERENCES `mob_share`.`tbl_usuario_desktop` (`id_usuario_desktop`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_foto_veiculo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_foto_veiculo` (
  `id_foto_veiculo` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela foto do veículo',
  `nome_foto` VARCHAR(255) NOT NULL COMMENT 'nome da foto ',
  `id_veiculo` INT NOT NULL COMMENT 'código da tabela veículo',
  PRIMARY KEY (`id_foto_veiculo`),
  INDEX `fk_tbl_foto_veiculo_tbl_veiculo_idx` (`id_veiculo` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_foto_veiculo_tbl_veiculo`
    FOREIGN KEY (`id_veiculo`)
    REFERENCES `mob_share`.`tbl_veiculo` (`id_veiculo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_contas_pagar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_contas_pagar` (
  `id_conta_pagar` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela contas à pagar',
  `descricao` TEXT NOT NULL COMMENT 'descrição da conta à pagar ',
  `data_entrada` DATE NOT NULL COMMENT 'data de entrada da conta à pagar',
  `valor` DECIMAL(10,2) NOT NULL COMMENT 'valor da conta à pagar',
  `titulos_baixados` VARCHAR(45) NULL COMMENT 'títulos das contas à pagar',
  `data_baixa` DATETIME NULL COMMENT 'data da baixa da conta à pagar',
  `codigo_pagamento` VARCHAR(32) NULL COMMENT 'número do código do pagamento',
  `confirmado` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'confirmação do pagamento aceito ou não aceito',
  PRIMARY KEY (`id_conta_pagar`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_contas_receber`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_contas_receber` (
  `id_conta_receber` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela contas à receber',
  `valor` DECIMAL(10,2) NOT NULL COMMENT 'valor das contas à receber',
  `data_entrada` DATE NOT NULL COMMENT 'data da entrada do valor à receber',
  `descricao` TEXT NULL COMMENT 'descrição das contas à receber',
  `titulos_baixados` VARCHAR(45) NULL COMMENT 'títulos baixados',
  `titulos_recebidos` VARCHAR(45) NULL COMMENT 'títulos recebidos',
  `data_baixa` DATETIME NULL COMMENT 'data da baixa do título',
  `confirmado` TINYINT(1) NOT NULL DEFAULT 0 COMMENT 'contas foram confirmadas ou não',
  PRIMARY KEY (`id_conta_receber`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_salario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_salario` (
  `id_salario` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela de salário',
  `salario` DECIMAL(10,2) NOT NULL COMMENT 'salário do funcionário',
  `data_cadastro` DATETIME NOT NULL COMMENT 'data de cadastro do funcionário',
  `id_funcionario` INT NOT NULL COMMENT 'código da tabela de fucionário ',
  PRIMARY KEY (`id_salario`),
  INDEX `fk_tbl_funcionario_tbl_salario_idx` (`id_funcionario` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_funcionario_tbl_salario`
    FOREIGN KEY (`id_funcionario`)
    REFERENCES `mob_share`.`tbl_funcionario` (`id_funcionario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_bancos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_bancos` (
  `id_banco` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela bancas',
  `nome_banco` VARCHAR(60) NOT NULL COMMENT 'nome do banco',
  `agencia_numero` VARCHAR(20) NOT NULL COMMENT 'número da agência',
  `cidade` VARCHAR(100) NULL COMMENT 'cidade do banco',
  `uf` VARCHAR(2) NULL COMMENT 'estado do banco',
  PRIMARY KEY (`id_banco`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_conta`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_conta` (
  `id_conta` INT NOT NULL AUTO_INCREMENT COMMENT 'código da conta',
  `saldo_conta_bancaria` DECIMAL(10,2) NOT NULL COMMENT 'saldo da conta bancaria',
  `numero_conta` VARCHAR(32) NOT NULL COMMENT 'número da conta bancária',
  `id_banco` INT NOT NULL COMMENT 'código da tabela banco',
  PRIMARY KEY (`id_conta`),
  CONSTRAINT `fk_tbl_conta_bancaria_tbl_`
    FOREIGN KEY (`id_banco`)
    REFERENCES `mob_share`.`tbl_bancos` (`id_banco`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_fornecedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_fornecedor` (
  `id_fornecedor` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela do fornecedor',
  `nome_fornecedor` VARCHAR(100) NOT NULL COMMENT 'nome do fornecedor',
  `cnpj_fornecedor` VARCHAR(20) NOT NULL COMMENT 'cnpj do fornecedor',
  `cod_fornecedor` VARCHAR(32) NULL COMMENT 'código de identificação do fornecedor',
  `razao_social` VARCHAR(100) NULL COMMENT 'razão social do fornecedor',
  PRIMARY KEY (`id_fornecedor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_pedido` (
  `id_pedido` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela pedido',
  `valor_total` DECIMAL(10,2) NOT NULL DEFAULT 0 COMMENT 'valor total do pedido',
  `forma_pagamento` VARCHAR(45) NOT NULL COMMENT 'forma de pagamento do pedido',
  `previsao_entrega` DATE NOT NULL COMMENT 'previsão de entrega do pedido',
  `cod_pedido` VARCHAR(32) NOT NULL COMMENT 'código de barras do pedido',
  `natureza_da_compra` VARCHAR(100) NOT NULL COMMENT 'origem da compra',
  `desconto` DECIMAL(10,2) NOT NULL DEFAULT 0 COMMENT 'desconto na compra',
  `data_compra` DATE NOT NULL COMMENT 'data da compra',
  `frete` DECIMAL(10,2) NOT NULL COMMENT 'frete do pedido',
  `id_fornecedor` INT NOT NULL COMMENT 'código da tabela fornecedor',
  `id_usuario_desktop` INT NOT NULL COMMENT 'código da tabela usuário desktop',
  PRIMARY KEY (`id_pedido`),
  INDEX `fk_tbl_pedidos_tbl_fornecedor_idx` (`id_fornecedor` ASC) VISIBLE,
  INDEX `fk_tbl_usuario_desktop_tbl_pedido_idx` (`id_usuario_desktop` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_fornecedor_tbl_pedidos`
    FOREIGN KEY (`id_fornecedor`)
    REFERENCES `mob_share`.`tbl_fornecedor` (`id_fornecedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_usuario_desktop_tbl_pedido`
    FOREIGN KEY (`id_usuario_desktop`)
    REFERENCES `mob_share`.`tbl_usuario_desktop` (`id_usuario_desktop`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_produto` (
  `id_produto` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela prodto',
  `descricao` TEXT NULL COMMENT 'descrição do produto',
  `valor_unitario` DECIMAL(10,2) NOT NULL COMMENT 'valor unitário do produto',
  `cod_produto` VARCHAR(100) NOT NULL COMMENT 'código do produto',
  `nome` VARCHAR(100) NOT NULL COMMENT 'nome do produto',
  PRIMARY KEY (`id_produto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_aprovacao_veiculo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_aprovacao_veiculo` (
  `id_aprovacao_veiculo` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela aprovação do veículo',
  `status_aprovacao` TINYINT NOT NULL COMMENT 'status de aprovação',
  `id_usuario_cms` INT NOT NULL COMMENT 'código do usuário do cms',
  `id_veiculo` INT NOT NULL COMMENT 'código da tabela veículo',
  PRIMARY KEY (`id_aprovacao_veiculo`),
  INDEX `fk_tbl_aprovacao_veiculo_tbl_veiculo_idx` (`id_veiculo` ASC) VISIBLE,
  INDEX `fk_tbl_aprovacao_veiculo_tbl_usuario_cms_idx` (`id_usuario_cms` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_avaliacao_veiculo_tbl_veiculo`
    FOREIGN KEY (`id_veiculo`)
    REFERENCES `mob_share`.`tbl_veiculo` (`id_veiculo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_avaliacao_veiculo_tbl_usuario_cms`
    FOREIGN KEY (`id_usuario_cms`)
    REFERENCES `mob_share`.`tbl_usuario_cms` (`id_usuario_cms`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_aprovacao_anuncio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_aprovacao_anuncio` (
  `id_aprovacao_anuncio` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela aprovação do anúncio',
  `status_aprovacao` TINYINT NOT NULL COMMENT 'status da aprovação',
  `id_anuncio` INT NOT NULL COMMENT 'código da tabela anúncio',
  `id_usuario_cms` INT NOT NULL COMMENT 'código da tabela usuário do cms',
  PRIMARY KEY (`id_aprovacao_anuncio`),
  INDEX `fk_tbl_aprovacao_anuncio_tbl_usuario_cms_idx` (`id_usuario_cms` ASC) VISIBLE,
  INDEX `fk_tbl_aprovacao_anuncio_tbl_anuncio_idx` (`id_anuncio` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_avaliacao_anuncio_tbl_usuario_cms`
    FOREIGN KEY (`id_usuario_cms`)
    REFERENCES `mob_share`.`tbl_usuario_cms` (`id_usuario_cms`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_avaliacao_anuncio_tbl_anuncio`
    FOREIGN KEY (`id_anuncio`)
    REFERENCES `mob_share`.`tbl_anuncio` (`id_anuncio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_aprovacao_anuncio_venda`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_aprovacao_anuncio_venda` (
  `id_aprovacao_anuncio_venda` INT NOT NULL AUTO_INCREMENT COMMENT 'código de aprovação do anúncio de venda',
  `status_aprovacao` TINYINT NOT NULL COMMENT 'status de aprovação do anúncio de venda',
  `id_anuncio_venda` INT NOT NULL COMMENT 'código da tabela de anúncio de venda',
  `id_usuario_cms` INT NOT NULL COMMENT 'código da tabela do usuário do cms',
  PRIMARY KEY (`id_aprovacao_anuncio_venda`),
  INDEX `fk_tbl_aprovacao_anuncio_tbl_usuario_cms_idx` (`id_usuario_cms` ASC) VISIBLE,
  INDEX `fk_tbl_aprovacao_anuncio_venda_tbl_anuncio_venda_idx` (`id_anuncio_venda` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_avaliacao_anuncio_venda_tbl_usuario_cms`
    FOREIGN KEY (`id_usuario_cms`)
    REFERENCES `mob_share`.`tbl_usuario_cms` (`id_usuario_cms`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_avaliacao_anuncio_venda_tbl_anuncio_venda`
    FOREIGN KEY (`id_anuncio_venda`)
    REFERENCES `mob_share`.`tbl_anuncio_venda` (`id_anuncio_venda`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_comentario_avaliacao`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_comentario_avaliacao` (
  `id_comentario` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela comentário',
  `comentario` TEXT NULL COMMENT 'comentário',
  `data` DATETIME NOT NULL COMMENT 'data do comentário da avaliação',
  PRIMARY KEY (`id_comentario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_acessorio_veiculo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_acessorio_veiculo` (
  `idtbl_acessorio_tbl_veiculo` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela de acessório do veículo',
  `id_acessorio` INT NULL COMMENT 'código da tabela acessório',
  `id_veiculo` INT NULL COMMENT 'código da tabela de veículo',
  PRIMARY KEY (`idtbl_acessorio_tbl_veiculo`),
  INDEX `fk_tbl_acessorio_veiculo_tbl_veiculo_idx` (`id_veiculo` ASC) VISIBLE,
  INDEX `fk_tbl_acessorio_veiculo_tbl_acessorio_idx` (`id_acessorio` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_acessorio_veiculo_tbl_veiculo`
    FOREIGN KEY (`id_veiculo`)
    REFERENCES `mob_share`.`tbl_veiculo` (`id_veiculo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_acessorio_veiculo_tbl_acessorio`
    FOREIGN KEY (`id_acessorio`)
    REFERENCES `mob_share`.`tbl_acessorios` (`id_acessorios`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_fale_conosco`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_fale_conosco` (
  `id_fale_conosco` INT NOT NULL AUTO_INCREMENT COMMENT 'código da página fale conosco',
  `nome_fale_conosco` VARCHAR(100) NOT NULL COMMENT 'nome da página fale conosco',
  `email_fale_conosco` VARCHAR(100) NOT NULL COMMENT 'email da página fale conosco',
  `telefone_fale_conosco` VARCHAR(20) NOT NULL COMMENT 'telefone da página fale conosco',
  PRIMARY KEY (`id_fale_conosco`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_email_mkt`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_email_mkt` (
  `id_email_mkt` INT NOT NULL AUTO_INCREMENT COMMENT 'código da página email marketing',
  `email` VARCHAR(100) NOT NULL COMMENT 'email da página email marketing',
  PRIMARY KEY (`id_email_mkt`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_pagina_tutorial`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_pagina_tutorial` (
  `id_tutorial` INT NOT NULL AUTO_INCREMENT COMMENT 'código da página tutorial',
  `titulo_tutorial` VARCHAR(100) NOT NULL COMMENT 'título da página tutorial',
  `texto_tutorial` TEXT NOT NULL COMMENT 'texto da página tutorial',
  `foto_tutorial` VARCHAR(200) NULL COMMENT 'fotos da página tutorial',
  PRIMARY KEY (`id_tutorial`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_pagina_sobre`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_pagina_sobre` (
  `id_sobre` INT NOT NULL AUTO_INCREMENT COMMENT 'código da página sobre',
  `titulo_sobre` VARCHAR(45) NOT NULL COMMENT 'título da página sobre',
  `texto_sobre` VARCHAR(45) NOT NULL COMMENT 'texto da página sobre',
  `foto_sobre` VARCHAR(200) NOT NULL COMMENT 'foto da página sobre',
  `missao_sobre` TEXT NOT NULL COMMENT 'missão página sobre',
  `visao_sobre` TEXT NOT NULL COMMENT 'visão página sobre',
  `valores_sobre` TEXT NOT NULL COMMENT 'valores da página sobre',
  PRIMARY KEY (`id_sobre`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_como_ganhar_dinheiro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_como_ganhar_dinheiro` (
  `id_ganhar_dinheiro` INT NOT NULL AUTO_INCREMENT COMMENT 'código da página como ganhar dinheiro',
  `titulo_como_ganhar` TEXT NOT NULL COMMENT 'título da página como ganhar dinheiro',
  `texto_como_ganhar` TEXT NOT NULL COMMENT 'texto da página como ganhar dinheiro',
  `img_como_ganhar` VARCHAR(100) NOT NULL COMMENT 'imagem da página como ganhar dinheiro',
  PRIMARY KEY (`id_ganhar_dinheiro`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_seja_parceiro`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_seja_parceiro` (
  `id_seja_parceiro` INT NOT NULL AUTO_INCREMENT COMMENT 'código da página seja parceiro',
  `titulo_seja_parceiro` VARCHAR(45) NOT NULL COMMENT 'título da página seja parceiro',
  `texto_seja_parceiro` TEXT NOT NULL COMMENT 'texto da página seja parceiro',
  `foto_seja_parceiro` VARCHAR(45) NOT NULL COMMENT 'foto da página seja parceiro',
  PRIMARY KEY (`id_seja_parceiro`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_termos_uso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_termos_uso` (
  `id_termos_uso` INT NOT NULL AUTO_INCREMENT COMMENT 'código da página termos de uso',
  `pdf_termos` VARCHAR(45) NOT NULL COMMENT 'pdf da página termos de uso',
  `titulo_termos` VARCHAR(45) NOT NULL COMMENT 'título da página termos de uso',
  `texto_1_termos` VARCHAR(45) NOT NULL COMMENT 'texto da página termos de uso',
  `icone_1_termos` VARCHAR(45) NULL COMMENT 'ícone da página termos de uso',
  PRIMARY KEY (`id_termos_uso`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_melhores_avaliacoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_melhores_avaliacoes` (
  `id_melhores_avaliacoes` INT NOT NULL AUTO_INCREMENT COMMENT 'código da página melhores avaliações',
  `titulo_melhores_avaliacoes` TEXT NOT NULL COMMENT 'título da página melhores avaliações',
  `texto_melhores_avaliacoes` TEXT NOT NULL COMMENT 'texto da página melhores avaliações',
  PRIMARY KEY (`id_melhores_avaliacoes`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_faq`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_faq` (
  `id_faq` INT NOT NULL AUTO_INCREMENT COMMENT 'código da página faq',
  `titulo_faq` VARCHAR(100) NOT NULL COMMENT 'título da página faq',
  `pergunta_1_faq` TEXT NOT NULL COMMENT 'pergunta da página faq',
  `resposta_1_faq` TEXT NOT NULL COMMENT 'resposta da página faq',
  PRIMARY KEY (`id_faq`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_principais_anuncios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_principais_anuncios` (
  `id_principais_anuncios` INT NOT NULL AUTO_INCREMENT COMMENT 'código principais anúncios',
  `id_anuncios_venda` INT NOT NULL COMMENT 'código da tabela anúncios a venda',
  `status` TINYINT NOT NULL COMMENT 'status dos principais anúncios',
  PRIMARY KEY (`id_principais_anuncios`),
  INDEX `fk_tbl_principais_anuncios_tbl_anuncios_venda_idx` (`id_anuncios_venda` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_principais_anuncios_tbl_anuncios_venda`
    FOREIGN KEY (`id_anuncios_venda`)
    REFERENCES `mob_share`.`tbl_anuncio_venda` (`id_anuncio_venda`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_tabela_precos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_tabela_precos` (
  `id_tabela_precos` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela de preços',
  `titulo_tabela_precos` VARCHAR(45) NOT NULL COMMENT 'título da tabela de preços',
  `texto_tabela_precos` VARCHAR(45) NOT NULL COMMENT 'texto da tabela de preços',
  `descricao_tabela_precos` VARCHAR(45) NULL COMMENT 'descrição da tabela de preços',
  `foto_tabela_precos` VARCHAR(45) NULL COMMENT 'foto da tabela de preços',
  PRIMARY KEY (`id_tabela_precos`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_menu`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_menu` (
  `id_menu` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela menu',
  `nome_menu` VARCHAR(25) NOT NULL COMMENT 'nome do menu',
  `href` VARCHAR(150) NOT NULL COMMENT 'url/ link do menu',
  `icone` VARCHAR(255) NOT NULL COMMENT 'ícone do menu',
  PRIMARY KEY (`id_menu`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_niveis_menu`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_niveis_menu` (
  `id_niveis_menu` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela níveis do menu',
  `id_menu` INT NOT NULL COMMENT 'código da tabela menu',
  `id_niveis` INT NOT NULL COMMENT 'código da tabela níveis',
  PRIMARY KEY (`id_niveis_menu`),
  INDEX `fk_tbl_niveis_menu_tbl_niveis_idx` (`id_niveis` ASC) VISIBLE,
  INDEX `fk_tbl_niveis_menu_tbl_menu_idx` (`id_menu` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_niveis_menu_tbl_niveis`
    FOREIGN KEY (`id_niveis`)
    REFERENCES `mob_share`.`tbl_niveis` (`id_niveis`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_niveis_menu_tbl_menu`
    FOREIGN KEY (`id_menu`)
    REFERENCES `mob_share`.`tbl_menu` (`id_menu`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_avaliacao_servico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_avaliacao_servico` (
  `id_avaliacao_servico` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela avaliação serviço',
  `nota` FLOAT NULL COMMENT 'nota da avaliação',
  `data_avaliacao` DATE NOT NULL COMMENT 'data da avaliação',
  `id_locacao` INT NOT NULL COMMENT 'código da tabela locação',
  `comentario` TEXT NULL COMMENT 'comentária da locação',
  PRIMARY KEY (`id_avaliacao_servico`),
  INDEX `fk_tbl_avaliacao_servico_tbl_locacao_idx` (`id_locacao` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_avaliacao_servico_tbl_locacao`
    FOREIGN KEY (`id_locacao`)
    REFERENCES `mob_share`.`tbl_locacao` (`id_locacao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_avaliacao_locatario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_avaliacao_locatario` (
  `id_avaliacao_locatario` INT NOT NULL AUTO_INCREMENT COMMENT 'código  da tabeça de avaliação do locatario',
  `nota` FLOAT NULL COMMENT 'nota do locatario',
  `comentario` TEXT NOT NULL COMMENT 'comentário da avaliação do locatário',
  `data_avaliacao` DATE NOT NULL COMMENT 'data da avaliação do locatario',
  `id_locacao` INT NOT NULL COMMENT 'código da tabela locação',
  PRIMARY KEY (`id_avaliacao_locatario`),
  INDEX `fk_tbl_avaliacao_locacao_tbl_locacao_idx` (`id_locacao` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_avaliacao_locacao_tbl_locacao`
    FOREIGN KEY (`id_locacao`)
    REFERENCES `mob_share`.`tbl_locacao` (`id_locacao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_locacao_conta_receber`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_locacao_conta_receber` (
  `id_locacao_conta_receber` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela locação contas à receber',
  `id_locacao` INT NOT NULL COMMENT 'código da tabela locação',
  `id_conta_receber` INT NOT NULL COMMENT 'código da tabela contas à receber',
  PRIMARY KEY (`id_locacao_conta_receber`),
  INDEX `fk_tbl_carteira_tbl_locacao_idx` (`id_locacao` ASC) VISIBLE,
  INDEX `fk_tbl_contas_receber_tbl_locacao_conta_receber_idx` (`id_conta_receber` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_locacao_tbl_locacao_contas_receber`
    FOREIGN KEY (`id_locacao`)
    REFERENCES `mob_share`.`tbl_locacao` (`id_locacao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_contas_receber_tbl_locacao_conta_receber`
    FOREIGN KEY (`id_conta_receber`)
    REFERENCES `mob_share`.`tbl_contas_receber` (`id_conta_receber`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_locacao_conta_pagar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_locacao_conta_pagar` (
  `id_locacao_conta_pagar` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela contas à pagar',
  `id_locacao` INT NOT NULL COMMENT 'código da tabela locação',
  `id_conta_pagar` INT NOT NULL COMMENT 'código da tabela contas à pagar',
  PRIMARY KEY (`id_locacao_conta_pagar`),
  INDEX `fk_tbl_pagamento_cliente_tbl_locacao_idx` (`id_locacao` ASC) VISIBLE,
  INDEX `fk_tbl_contas_pagar_tbl_locacao_conta_pagar_idx` (`id_conta_pagar` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_locacao_tbl_locacao_conta_pagar`
    FOREIGN KEY (`id_locacao`)
    REFERENCES `mob_share`.`tbl_locacao` (`id_locacao`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_contas_pagar_tbl_locacao_conta_pagar`
    FOREIGN KEY (`id_conta_pagar`)
    REFERENCES `mob_share`.`tbl_contas_pagar` (`id_conta_pagar`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_percentual_desconto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_percentual_desconto` (
  `id_percentual_desconto` INT NOT NULL AUTO_INCREMENT COMMENT 'código do percentual de desconto',
  `percentual` FLOAT NOT NULL COMMENT 'porcentagem do percentual de desconto',
  `id_cliente` INT NOT NULL COMMENT 'código do cliente',
  `data_inicio` DATETIME NOT NULL COMMENT 'data de início do percentual de desconto',
  `data_final` DATETIME NOT NULL COMMENT 'data final do desconto',
  `codigo` VARCHAR(15) NOT NULL COMMENT 'numeração do código de percentual de desconto',
  PRIMARY KEY (`id_percentual_desconto`),
  INDEX `fk_tbl_percentual_desconto_tbl_cliente_idx` (`id_cliente` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_percentual_desconto_tbl_cliente`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `mob_share`.`tbl_cliente` (`id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_pedido_contas_pagar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_pedido_contas_pagar` (
  `id_pedido_contas_pagar` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela pedidos de conta à pagar',
  `id_pedido` INT NOT NULL COMMENT 'código da tabela pedidos',
  `id_conta_pagar` INT NOT NULL COMMENT 'código da tabela contas à pagar',
  PRIMARY KEY (`id_pedido_contas_pagar`),
  INDEX `fk_tbl_pedido_tbl_pedido_contas_pagar_idx` (`id_pedido` ASC) VISIBLE,
  INDEX `fk_tbl_contas_pagar_tbl_pedido_contas_pagar_idx` (`id_conta_pagar` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_pedido_tbl_pedido_contas_pagar`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `mob_share`.`tbl_pedido` (`id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_contas_pagar_tbl_pedido_contas_pagar`
    FOREIGN KEY (`id_conta_pagar`)
    REFERENCES `mob_share`.`tbl_contas_pagar` (`id_conta_pagar`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_folha_pagamento_contas_pagar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_folha_pagamento_contas_pagar` (
  `id_pedido_contas_pagar` INT NOT NULL AUTO_INCREMENT,
  `id_folha_pagamento` INT NOT NULL COMMENT 'código da tabela folha de pagamento',
  `id_conta_pagar` INT NOT NULL COMMENT 'código da tabela conta à pagar',
  PRIMARY KEY (`id_pedido_contas_pagar`),
  INDEX `fk_tbl_funcionario_idx` (`id_folha_pagamento` ASC) VISIBLE,
  INDEX `fk_tbl_contas_pagar_tbl_folha_pagamento_contas_pagar_idx` (`id_conta_pagar` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_folha_pagamento_tbl_folha_pagamento_contas_pagar`
    FOREIGN KEY (`id_folha_pagamento`)
    REFERENCES `mob_share`.`tbl_folha_pagamento` (`id_folha_pagamento`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_contas_pagar_tbl_folha_pagamento_contas_pagar`
    FOREIGN KEY (`id_conta_pagar`)
    REFERENCES `mob_share`.`tbl_contas_pagar` (`id_conta_pagar`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_pedido_produto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_pedido_produto` (
  `id_pedido_produto` INT NOT NULL COMMENT 'código da tabela produto do pedido',
  `quantidade` INT NOT NULL COMMENT 'quantidade de produtos',
  `valor` DECIMAL(10,2) NOT NULL COMMENT 'valor unitário',
  `id_produto` INT NOT NULL COMMENT 'código da tabela do produto',
  `id_pedido` INT NOT NULL COMMENT 'código da tabela do pedido',
  PRIMARY KEY (`id_pedido_produto`),
  INDEX `fk_produto_pedido_idx` (`id_pedido` ASC) VISIBLE,
  INDEX `fk_tbl_produto_tbl_pedido_produto_idx` (`id_produto` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_pedido_tbl_pedido_produto`
    FOREIGN KEY (`id_pedido`)
    REFERENCES `mob_share`.`tbl_pedido` (`id_pedido`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_produto_tbl_pedido_produto`
    FOREIGN KEY (`id_produto`)
    REFERENCES `mob_share`.`tbl_produto` (`id_produto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_permissoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_permissoes` (
  `id_permissoes` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela de permissoes',
  `nome` VARCHAR(45) NOT NULL COMMENT 'nome das permissoes',
  `titulo` VARCHAR(45) NOT NULL COMMENT 'título das permissoes',
  `descricao` TEXT NULL COMMENT 'descrição das permissoes',
  `icone` VARCHAR(100) NOT NULL COMMENT 'ícone das permissoes',
  `href` VARCHAR(100) NOT NULL COMMENT 'link das permissoes',
  PRIMARY KEY (`id_permissoes`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_usuario_desktop_permissoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_usuario_desktop_permissoes` (
  `id_usuario_desktop_permicoes` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela de permições do usuário  do desktop',
  `id_usuario_desktop` INT NOT NULL COMMENT 'código da tabela do usuário  do desktop',
  `id_permicoes` INT NOT NULL COMMENT 'código da tabela de permições',
  PRIMARY KEY (`id_usuario_desktop_permicoes`, `id_permicoes`),
  INDEX `fk_tbl_permicoes_idx` (`id_permicoes` ASC) VISIBLE,
  INDEX `fk_tbl_usuario_desktop_tbl_usuario_desktop_permicoes_idx` (`id_usuario_desktop` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_permicoes_tbl_usuario_desktop_permicoes`
    FOREIGN KEY (`id_permicoes`)
    REFERENCES `mob_share`.`tbl_permissoes` (`id_permissoes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_usuario_desktop_tbl_usuario_desktop_permicoes`
    FOREIGN KEY (`id_usuario_desktop`)
    REFERENCES `mob_share`.`tbl_usuario_desktop` (`id_usuario_desktop`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_cargos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_cargos` (
  `id_cargo` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela de cargos',
  `nome` VARCHAR(100) NOT NULL COMMENT 'nome do cargo',
  PRIMARY KEY (`id_cargo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_cargo_funcionario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_cargo_funcionario` (
  `id_cargo_funcionario` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela de cargo do funcionário',
  `id_cargo` INT NOT NULL COMMENT 'código da tabela de cargo',
  `id_funcionario` INT NOT NULL COMMENT 'código da tabela de funcionário',
  `data` DATE NULL COMMENT 'data de contratação do funcionário',
  PRIMARY KEY (`id_cargo_funcionario`),
  INDEX `fk_tbl_setor_tbl_cargo_funcionario_idx` (`id_cargo` ASC) VISIBLE,
  INDEX `fk_tbl_funcionario_tbl_cargo_funcionario_idx` (`id_funcionario` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_setor_tbl_cargo_funcionario`
    FOREIGN KEY (`id_cargo`)
    REFERENCES `mob_share`.`tbl_cargos` (`id_cargo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_funcionario_tbl_cargo_funcionario`
    FOREIGN KEY (`id_funcionario`)
    REFERENCES `mob_share`.`tbl_funcionario` (`id_funcionario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_operacoes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_operacoes` (
  `id_operacoes` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela operações',
  `id_conta` INT NOT NULL COMMENT 'código da tabela conta',
  `data_entrada` DATE NOT NULL COMMENT 'data da entrada da operação',
  `id_usuario_desktop` INT NOT NULL COMMENT 'código do usuário do desktop',
  PRIMARY KEY (`id_operacoes`),
  INDEX `fk_tbl_conta_tbl_operacoes_idx` (`id_conta` ASC) VISIBLE,
  INDEX `fk_tbl_usuario_desktop_tbl_operacoes_idx` (`id_usuario_desktop` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_conta_tbl_operacoes`
    FOREIGN KEY (`id_conta`)
    REFERENCES `mob_share`.`tbl_conta` (`id_conta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_usuario_desktop_tbl_operacoes`
    FOREIGN KEY (`id_usuario_desktop`)
    REFERENCES `mob_share`.`tbl_usuario_desktop` (`id_usuario_desktop`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_operacoes_contas_receber`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_operacoes_contas_receber` (
  `id_operacoes_contas_receber` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela operações contas à receber',
  `id_contas_receber` INT NOT NULL COMMENT 'código da tabela contas à receber',
  `id_operacoes` INT NOT NULL COMMENT 'código da tabela operações',
  PRIMARY KEY (`id_operacoes_contas_receber`),
  INDEX `fk_tbl__contas_receber_tbl_operacoes_contas_receber_idx` (`id_contas_receber` ASC) VISIBLE,
  INDEX `fk_tbl_operacoes_tbl_operacoes_contas_receber_idx` (`id_operacoes` ASC) VISIBLE,
  CONSTRAINT `fk_tbl__contas_receber_tbl_operacoes_contas_receber`
    FOREIGN KEY (`id_contas_receber`)
    REFERENCES `mob_share`.`tbl_contas_receber` (`id_conta_receber`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_operacoes_tbl_operacoes_contas_receber`
    FOREIGN KEY (`id_operacoes`)
    REFERENCES `mob_share`.`tbl_operacoes` (`id_operacoes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mob_share`.`tbl_operacoes_contas_pagar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mob_share`.`tbl_operacoes_contas_pagar` (
  `id_operacoes_contas_pagar` INT NOT NULL AUTO_INCREMENT COMMENT 'código da tabela operações contas à receber',
  `id_contas_pagar` INT NOT NULL COMMENT 'código da tabela contas à pagar',
  `id_operacoes` INT NOT NULL COMMENT 'código da tabela operações',
  PRIMARY KEY (`id_operacoes_contas_pagar`),
  INDEX `fk_tbl_contas_pagar_tbl_operacoes_contas_pagar_idx` (`id_contas_pagar` ASC) VISIBLE,
  INDEX `fk_tbl_operacoes_tbl_operacoes_contas_pagar_idx` (`id_operacoes` ASC) VISIBLE,
  CONSTRAINT `fk_tbl_contas_pagar_tbl_operacoes_contas_pagar`
    FOREIGN KEY (`id_contas_pagar`)
    REFERENCES `mob_share`.`tbl_contas_pagar` (`id_conta_pagar`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tbl_operacoes_tbl_operacoes_contas_pagar`
    FOREIGN KEY (`id_operacoes`)
    REFERENCES `mob_share`.`tbl_operacoes` (`id_operacoes`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
